---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  name: "{{ .Release.Name }}-server"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: "{{ .Release.Name }}-server"
  strategy:
    type: "{{ .Values.server.strategy }}"
  template:
    metadata:
      annotations:
        {{- with .Values.server.annotations }}
        {{- toYaml . | nindent 4 }}
        {{- end }}
      labels:
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        app.kubernetes.io/name: "{{ .Release.Name }}-server"
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: "{{ .Release.Name }}-server"
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        {{- with .Values.server.labels }}
        {{- toYaml . | nindent 4 }}
        {{- end }}
    spec:
      containers:
        {{ if .Values.api.attach_to_game_server }}
        - name: api
          image: "{{ .Values.server.image.name }}:{{ .Values.server.image.tag }}"
          imagePullPolicy: {{ .Values.api.image.imagePullPolicy }}
          envFrom:
            - configMapRef:
                name: "{{ .Release.Name }}-api-env-config"
          ports:
            - name: api
              containerPort: {{ .Values.api.config.port }}
              protocol: TCP
        {{ end }}
        - name: server
          image: "{{ .Values.server.image.name }}:{{ .Values.server.image.tag }}"
          imagePullPolicy: {{ .Values.server.image.imagePullPolicy }}
          resources:
            {{- with .Values.server.resources }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            {{- with .Values.server.ports }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          env:
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-rcon-password"
                  key: "rconPassword"
          envFrom:
            - configMapRef:
                name: "{{ .Release.Name }}-env-config"
          volumeMounts:
            - mountPath: /palworld
              name: datadir
      volumes:
        - name: datadir
          persistentVolumeClaim:
            {{- if not .Values.server.storage.external }}
            claimName: "{{ .Release.Name }}-datadir-pvc"
            {{ else }}
            claimName: "{{ .Values.server.storage.externalName }}"
            {{ end }}
---
{{ if .Values.api.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  name: "{{ .Release.Name }}-api"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: "{{ .Release.Name }}-api"
  strategy:
    type: "{{ .Values.server.strategy }}"
  template:
    metadata:
      annotations:
        {{- with .Values.server.annotations }}
        {{- toYaml . | nindent 4 }}
        {{- end }}
      labels:
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        app.kubernetes.io/name: "{{ .Release.Name }}-api"
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: "{{ .Release.Name }}-api"
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        {{- with .Values.api.labels }}
        {{- toYaml . | nindent 4 }}
        {{- end }}
    spec:
      containers:
        - name: api
          image: "{{ .Values.api.image.name }}:{{ .Values.api.image.tag }}"
          imagePullPolicy: {{ .Values.api.image.imagePullPolicy }}
          envFrom:
            - configMapRef:
                name: "{{ .Release.Name }}-api-env-config"
          ports:
            - name: "api"
              containerPort: 3000
              protocol: TCP
        {{ end }}
